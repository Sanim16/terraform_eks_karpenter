# The Infrastructure workflow
name: Infra setup
run-name: ${{ github.actor }} pushed a change via GitHub Actions üöÄ
on:
  push:
    branches: [ "main", "master" ]
    paths:
      - 'vault/**'
  pull_request:
    branches: [ "main", "master" ]
    paths:
      - 'vault/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_REGION: ${{ secrets.AWS_REGION }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  pull-requests: write

jobs:
  
  scan:
    if: github.event_name == 'pull_request'
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          quiet: true # optional: display only failed checks
          soft_fail: true # optional: do not return an error code if there are failed checks
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif
        
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif

  Plan:
    if: github.event_name == 'pull_request'
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}

        # aws eks update-kubeconfig --region region-code --name my-cluster
        # aws eks --region $(terraform output -raw region) update-kubeconfig --name $(terraform output -raw cluster_name)
      # - name: Dry run vault
      #   run: |
      #     aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name dev-cluster
      #     kubectl create namespace vault
      #     helm install --dry-run --debug vault hashicorp/vault -f values.yaml --namespace vault
      #   working-directory: ./vault
      
      - run: echo "üçè This job's status is ${{ job.status }}."

  Deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}

      #   # aws eks update-kubeconfig --region region-code --name my-cluster
      # - name: List files in the repository
      #   run: |
      #     aws eks --region $(terraform output -raw region) update-kubeconfig --name $(terraform output -raw cluster_name)
      #     kubectl create namespace vault
      #   working-directory: ./vault

      - run: echo "üçè This job's status is ${{ job.status }}."
